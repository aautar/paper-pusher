{"version":3,"file":"paper-pusher.min.js","sources":["../src/PaperPusher.js"],"sourcesContent":["const PaperPusher =  (function () {\r\n    const subscribers = new Map();\r\n\r\n    const construct = function() {\r\n        /**\r\n         * Subscribe to an event\r\n         * \r\n         * @param {string} _eventName\r\n         * @param {function} _handlerFunction\r\n         */\r\n        this.subscribe = function(_eventName, _handlerFunction) {\r\n            let handlers = subscribers.get(_eventName);\r\n            if(typeof handlers === 'undefined') {\r\n                handlers = [];\r\n            }\r\n\r\n            handlers.push(_handlerFunction);\r\n            subscribers.set(_eventName, handlers);\r\n        };\r\n\r\n        /**\r\n         * Unsubscribe from an event\r\n         * \r\n         * @param {string} _eventName\r\n         * @param {function} _handlerFunction\r\n         */\r\n        this.unsubscribe = function(_eventName, _handlerFunction) {\r\n            const handlers = subscribers.get(_eventName);\r\n            if(typeof handlers === 'undefined') {\r\n                return;\r\n            }\r\n\r\n            for(var i=0; i<handlers.length; i++) {\r\n                var h = handlers[i];\r\n                if(h === _handlerFunction) {\r\n                    handlers.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            subscribers.set(_eventName, handlers);\r\n        };\r\n\r\n        /**\r\n         * Publish an event\r\n         * \r\n         * @param {string} _eventName\r\n         * @param {*} _eventData\r\n         * @param {boolean} _deferrable\r\n         */\r\n        this.publish = function(_eventName, _eventData, _deferrable) {\r\n            const handlers = subscribers.get(_eventName);\r\n            if(handlers) {\r\n                handlers.forEach(function(_h) {\r\n                    if(_deferrable) {\r\n                        setTimeout(function() { _h(_eventData); }, 0);\r\n                    } else {\r\n                        _h(_eventData);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    };\r\n\r\n    return construct;\r\n})();\r\n\r\nexport { PaperPusher }\r\n"],"names":["PaperPusher","construct","subscribe","_eventName","_handlerFunction","handlers","subscribers","get","push","set","unsubscribe","i","length","h","splice","publish","_eventData","_deferrable","forEach","_h","setTimeout"],"mappings":";;;AAAMA,QAAAA,WAAW,CAAK,UAAY,CAAA,KACb,CAAG,OADU,CAGxBC,CAAS,CAAG,SAAZA,SAAY,EAAW,CAOzB,IAAA,CAAKC,SAAL,CAAiB,SAASC,CAAT,CAAqBC,CAArB,CAAuC,CACpD,IAAIC,CAAQ,CAAGC,CAAW,CAACC,GAAZ,CAAgBJ,CAAhB,CAAf,CACuB,WAApB,SAFiD,CAAA,GAGhDE,CAAQ,CAAG,EAHqC,EAMpDA,CAAQ,CAACG,IAAT,CAAcJ,CAAd,CANoD,CAOpDE,CAAW,CAACG,GAAZ,CAAgBN,CAAhB,CAA4BE,CAA5B,EACH,CAfwB,CAuBzB,IAAA,CAAKK,WAAL,CAAmB,SAASP,CAAT,CAAqBC,CAArB,CAAuC,CACtD,IAAc,CAAA,CAAGE,CAAW,CAACC,GAAZ,CAAgBJ,CAAhB,CAAjB,CACA,GAAuB,WAApB,EAAOE,OAAAA,CAAV,EAIA,IAAI,KAAA,CAAIM,CAAC,CAAC,CAAV,CAAaA,CAAC,CAACN,CAAQ,CAACO,MAAxB,CAAgCD,CAAC,EAAjC,CAEI,GADIE,CACJ,CADQR,CAAQ,CAACM,CAAD,CAChB,CAAGE,CAAC,GAAKT,CAAT,CAA2B,CACvBC,CAAQ,CAACS,MAAT,CAAgBH,CAAhB,CAAmB,CAAnB,CADuB,CAEvB,KACH,CAGLL,CAAW,CAACG,GAAZ,CAAgBN,CAAhB,CAA4BE,CAA5B,EAZA,CAaH,CAtCwB,CA+CzB,KAAKU,OAAL,CAAe,SAASZ,CAAT,CAAqBa,CAArB,CAAiCC,CAAjC,CAA8C,CACzD,IAAMZ,CAAQ,CAAGC,CAAW,CAACC,GAAZ,CAAgBJ,CAAhB,CAAjB,CACGE,CAFsD,EAGrDA,CAAQ,CAACa,OAAT,CAAiB,SAASC,CAAT,CAAa,CACvBF,CADuB,CAEtBG,UAAU,CAAC,UAAW,CAAED,CAAE,CAACH,CAAD,EAAe,CAA/B,CAAiC,CAAjC,CAFY,CAItBG,CAAE,CAACH,CAAD,EAET,CAND,EAQP,EACJ,CA9D6B,CAgE9B,QACH,CAjEoB;;;;;;;;;;;;;;;"}